; Auto-generated. Do not edit!


(cl:in-package optoforce_ros-msg)


;//! \htmlinclude OptoForceFeedback.msg.html

(cl:defclass <OptoForceFeedback> (roslisp-msg-protocol:ros-message)
  ((wrench_lst
    :reader wrench_lst
    :initarg :wrench_lst
    :type (cl:vector geometry_msgs-msg:WrenchStamped)
   :initform (cl:make-array 0 :element-type 'geometry_msgs-msg:WrenchStamped :initial-element (cl:make-instance 'geometry_msgs-msg:WrenchStamped))))
)

(cl:defclass OptoForceFeedback (<OptoForceFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <OptoForceFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'OptoForceFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name optoforce_ros-msg:<OptoForceFeedback> is deprecated: use optoforce_ros-msg:OptoForceFeedback instead.")))

(cl:ensure-generic-function 'wrench_lst-val :lambda-list '(m))
(cl:defmethod wrench_lst-val ((m <OptoForceFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader optoforce_ros-msg:wrench_lst-val is deprecated.  Use optoforce_ros-msg:wrench_lst instead.")
  (wrench_lst m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <OptoForceFeedback>) ostream)
  "Serializes a message object of type '<OptoForceFeedback>"
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'wrench_lst))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (roslisp-msg-protocol:serialize ele ostream))
   (cl:slot-value msg 'wrench_lst))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <OptoForceFeedback>) istream)
  "Deserializes a message object of type '<OptoForceFeedback>"
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'wrench_lst) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'wrench_lst)))
    (cl:dotimes (i __ros_arr_len)
    (cl:setf (cl:aref vals i) (cl:make-instance 'geometry_msgs-msg:WrenchStamped))
  (roslisp-msg-protocol:deserialize (cl:aref vals i) istream))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<OptoForceFeedback>)))
  "Returns string type for a message object of type '<OptoForceFeedback>"
  "optoforce_ros/OptoForceFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'OptoForceFeedback)))
  "Returns string type for a message object of type 'OptoForceFeedback"
  "optoforce_ros/OptoForceFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<OptoForceFeedback>)))
  "Returns md5sum for a message object of type '<OptoForceFeedback>"
  "33beeb9f57ea2f43c06c3f58af305729")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'OptoForceFeedback)))
  "Returns md5sum for a message object of type 'OptoForceFeedback"
  "33beeb9f57ea2f43c06c3f58af305729")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<OptoForceFeedback>)))
  "Returns full string definition for message of type '<OptoForceFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#feedback~%geometry_msgs/WrenchStamped[] wrench_lst~%~%~%================================================================================~%MSG: geometry_msgs/WrenchStamped~%# A wrench with reference coordinate frame and timestamp~%Header header~%Wrench wrench~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Wrench~%# This represents force in free space, separated into~%# its linear and angular parts.~%Vector3  force~%Vector3  torque~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'OptoForceFeedback)))
  "Returns full string definition for message of type 'OptoForceFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#feedback~%geometry_msgs/WrenchStamped[] wrench_lst~%~%~%================================================================================~%MSG: geometry_msgs/WrenchStamped~%# A wrench with reference coordinate frame and timestamp~%Header header~%Wrench wrench~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Wrench~%# This represents force in free space, separated into~%# its linear and angular parts.~%Vector3  force~%Vector3  torque~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <OptoForceFeedback>))
  (cl:+ 0
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'wrench_lst) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ (roslisp-msg-protocol:serialization-length ele))))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <OptoForceFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'OptoForceFeedback
    (cl:cons ':wrench_lst (wrench_lst msg))
))
